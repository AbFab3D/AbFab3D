
function makeImage(path, w,h,d, grid){

  var voxelSize = grid.getVoxelSize();
  var img = new Image3D(path, w, h, d);
  img.setBaseThickness(0);
  img.setVoxelSize(voxelSize);
  img.setBlurWidth(2*voxelSize);
  img.setImagePlace(Image3D.IMAGE_PLACE_TOP);
  img.setCenter(0,0,3.5*MM);
  img.setUseGrayscale(false);

  return img;
  
}

function makePattern(grid,path) {
   var x0 = 0;
   var y0 = 0;
   var z0 = 0;
 
   var box = new Box(x0,y0,z0,12.5*MM,25.5*MM,15*MM);
   var hole1 = new Cylinder(new Vector3d(0*MM,-30.674*MM,0),new Vector3d(0*MM,-30.674*MM,25*MM), 5.5*MM);
   var hole2 = new Cylinder(new Vector3d(0*MM,29.805*MM,0),new Vector3d(0*MM,29.805*MM,25*MM), 5.5*MM);
 
   var img = makeImage(path, 64.16*MM, 106.185*MM, 1*MM,grid);
  
   var holes = new Union();
   holes.add(box);
   holes.add(hole1);
   holes.add(hole2);
  
   var diff = new Subtraction(img,holes);

  return diff;
}

function main(args) {
  var baseFile = args[0];
  var img = args[1];
  var grid = load(baseFile,0.2*MM);
  print("grid bounds: " + grid.getGridBounds());
  //var bounds = java.lang.reflect.Array.newInstance(java.lang.Double.TYPE,6);
  
  var dest = createGrid(grid,0,0,5*MM);
  var diff = new Union(new DataSourceGrid(grid, 255), makePattern(grid,img));
  var maker = new GridMaker();
  maker.setSource(diff);
  maker.makeGrid(dest);
   
  return dest;
}


