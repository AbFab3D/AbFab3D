function makePart(length, rad1, inRadius){

	
	var cyl1 = new Cylinder(new Vector3d(length-2*MM,0,0), new Vector3d(length,0,0), rad1);
	var cyl2 = new Cylinder(new Vector3d(length-2*MM,0,0), new Vector3d(length,0,0), rad1);
	
	
	var union = new Union();
	
	cyl1.setTransform(new Rotation(new Vector3d(0,1,0), Math.PI/4, new Vector3d(length-1*MM,0,0)));
	cyl2.setTransform(new Rotation(new Vector3d(0,1,0), -Math.PI/4, new Vector3d(length-1*MM,0,0)));
	
	union.add(cyl1);
	union.add(cyl2);
	
	var diff = new Subtraction(union, new Cylinder(new Vector3d(0,0,-2*rad1),new Vector3d(0,0,2*rad1),inRadius));
	return diff;
	
}

function makeRing(count, outRadius, inRadius){

	var alpha = Math.PI/count;
	var h = outRadius * Math.tan(alpha);
	var part = makePart(outRadius, h, inRadius);
	var sym = new ReflectionSymmetry();
	sym.setGroup(ReflectionSymmetries.getDihedralKaleidoscope(count));
	part.setTransform(sym);	
	
	
	return part;
	
	
}

function main(){

	var b = 14*MM;
	var voxelSize = 0.1*MM;
	
	dest = createGrid(-b,b,-b,b,-b,b,voxelSize);
	
	var part = makeRing(15, 12*MM, 10.5*MM);
	
    var maker = new GridMaker();
	maker.setSource(part);
	maker.makeGrid(dest);
		
	return dest;
	
}
