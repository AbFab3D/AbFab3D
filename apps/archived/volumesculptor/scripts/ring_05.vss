
function main(){

	var voxelSize = 0.1*MM;
	var width = 30*MM;
	var s = width/2;
	
	var grid = createGrid(-s, s, -s, s, -s, s,voxelSize);
	
	var bezelAngle = Math.PI/10;
	var innerRadius = 10*MM;
	var ringThickness = 2*MM;
	var bezelTop = innerRadius + ringThickness;
	var ringOuterRadius = innerRadius + ringThickness;
	
	var sinA = Math.sin(bezelAngle);
	
	var coneCenterY = ringOuterRadius/Math.sin(bezelAngle);
	var bezelBottom = coneCenterY*sinA*sinA;
	
	var ringBase = new Torus(innerRadius-ringThickness, 2*ringThickness);
	
	var bezel = new Intersection();		
	var coneCenter = new Vector3d(0,coneCenterY, 0);
	
	bezel.add(new Cone(coneCenter, new Vector3d(0,-1,0), bezelAngle));
	bezel.add(new Plane(new Vector3d(0,1,0), bezelTop));
	bezel.add(new Plane(new Vector3d(0,-1,0), -bezelBottom));
	
	var ring = new Union();
	ring.add(ringBase);
	ring.add(bezel);
	
	var cutoff = new Union();
	cutoff.add(new Cylinder(new Vector3d(0,0,-s),new Vector3d(0,0,s),innerRadius));
	var fullRing = new Subtraction(ring, cutoff);

	
	var maker = new GridMaker();	
		
	maker.setSource(fullRing);	
	
	maker.makeGrid(grid);
	
	return grid;
	
}
